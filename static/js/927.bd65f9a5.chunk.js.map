{"version":3,"file":"static/js/927.bd65f9a5.chunk.js","mappings":"wTAuCA,EAnC2BA,EAAAA,YAAiB,WAWzCC,GAAQ,IAVTC,EAUS,EAVTA,SACAC,EASS,EATTA,UACAC,EAQS,EARTA,QACAC,EAOS,EAPTA,SACAC,EAMS,EANTA,WACAC,EAKS,EALTA,MACAC,EAIS,EAJTA,KACAC,EAGS,EAHTA,QACAC,EAES,EAFTA,WACGC,GACM,YACHC,GAAoBC,EAAAA,EAAAA,IAAmBX,EAAU,SACjDY,EAAUC,GAAAA,CAAWZ,EAAWS,EAAmBH,GAAW,GAAJ,OAAOG,EAAP,YAA4BH,GAAWD,GAAQ,GAAJ,OAAOI,EAAP,YAA4BJ,GAAQJ,GAAW,GAAJ,OAAOQ,EAAP,YAAoCP,GAAY,GAAJ,OAAOO,EAAP,aAAqCN,GAAc,GAAJ,OAAOM,EAAP,eAAuCL,GAAS,GAAJ,OAAOK,EAAP,WAEvRI,GAAqBC,EAAAA,EAAAA,KAAK,SAAD,QAAC,UAAcN,GAAf,IAC7BR,UAAWW,EACXb,IAAKA,KAGP,GAAIS,EAAY,CACd,IAAIQ,EAAkB,GAAH,OAAMN,EAAN,eAMnB,MAJ0B,kBAAfF,IACTQ,EAAkB,GAAH,OAAMA,EAAN,YAAyBR,KAGtBO,EAAAA,EAAAA,KAAK,MAAO,CAC9Bd,UAAWe,EACXC,SAAUH,IAId,OAAOA,K,iBCqCT,MArEA,SAAcL,GAEZ,IAAIS,GAAQC,EAAAA,EAAAA,KAAY,SAACD,GAAD,OAAWA,KAE/BE,GAAWC,EAAAA,EAAAA,MAEf,OACE,iBAAKpB,UAAU,OAAf,WACE,UAAC,EAAD,CAAOO,YAAU,EAAjB,WACE,2BACE,+BACA,gDACA,0CACA,4CAEDU,EAAMI,QAAQC,KAAI,SAACC,EAAGC,GACrB,OACE,2BACE,wBAAKD,EAAEE,MACP,wBAAKF,EAAEG,QACP,wBAAKH,EAAEI,QACP,2BACE,mBAAQC,QAAS,WAAQT,EAAS,CAAEU,KAAM,2BAAQC,qBAAKP,EAAEE,MAAzD,gBACA,mBAAQG,QAAS,WAAQT,EAAS,CAAEU,KAAM,2BAAQC,qBAAKP,EAAEE,MAAzD,oBANKD,UAaK,IAAnBP,EAAMc,UACF,iBAAK/B,UAAU,eAAf,WACD,qGACA,mBAAQ4B,QAAS,WAAQT,EAAS,CAAEU,KAAM,uBAA1C,6BAEA,U","sources":["../node_modules/react-bootstrap/esm/Table.js","Cart.js"],"sourcesContent":["import classNames from 'classnames';\nimport * as React from 'react';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst Table = /*#__PURE__*/React.forwardRef(({\n  bsPrefix,\n  className,\n  striped,\n  bordered,\n  borderless,\n  hover,\n  size,\n  variant,\n  responsive,\n  ...props\n}, ref) => {\n  const decoratedBsPrefix = useBootstrapPrefix(bsPrefix, 'table');\n  const classes = classNames(className, decoratedBsPrefix, variant && `${decoratedBsPrefix}-${variant}`, size && `${decoratedBsPrefix}-${size}`, striped && `${decoratedBsPrefix}-striped`, bordered && `${decoratedBsPrefix}-bordered`, borderless && `${decoratedBsPrefix}-borderless`, hover && `${decoratedBsPrefix}-hover`);\n\n  const table = /*#__PURE__*/_jsx(\"table\", { ...props,\n    className: classes,\n    ref: ref\n  });\n\n  if (responsive) {\n    let responsiveClass = `${decoratedBsPrefix}-responsive`;\n\n    if (typeof responsive === 'string') {\n      responsiveClass = `${responsiveClass}-${responsive}`;\n    }\n\n    return /*#__PURE__*/_jsx(\"div\", {\n      className: responsiveClass,\n      children: table\n    });\n  }\n\n  return table;\n});\nexport default Table;","import React, { useEffect, memo } from \"react\";\r\nimport { Table } from \"react-bootstrap\"\r\nimport { connect, useDispatch, useSelector } from \"react-redux\";\r\nimport './Detail.scss'\r\n\r\nfunction Cart(props) {\r\n\r\n  let state = useSelector((state) => state);\r\n  // console.log(state.reducer);\r\n  let dispatch = useDispatch();\r\n\r\n  return (\r\n    <div className=\"cart\">\r\n      <Table responsive>\r\n        <tr>\r\n          <th>#</th>\r\n          <th>상품명</th>\r\n          <th>수량</th>\r\n          <th>변경</th>\r\n        </tr>\r\n        {state.reducer.map((e, i) => {\r\n          return (\r\n            <tr key={i}>\r\n              <td>{e.id}</td>\r\n              <td>{e.name}</td>\r\n              <td>{e.quan}</td>\r\n              <td>\r\n                <button onClick={() => { dispatch({ type: '수량증가', 데이터: e.id }) }}>+</button>\r\n                <button onClick={() => { dispatch({ type: '수량감소', 데이터: e.id }) }}>-</button>\r\n              </td>\r\n            </tr>\r\n          )\r\n        })\r\n        }\r\n      </Table>\r\n      {state.reducer2 === true\r\n        ? (<div className=\"my-alert-red\">\r\n          <p>지금 구매하시면 신규할인 20%</p>\r\n          <button onClick={() => { dispatch({ type: 'alert닫기' }) }}>닫기</button>\r\n        </div>)\r\n        : null\r\n      }\r\n\r\n      {/* <Parent 이름=\"존박22222\" 나이=\"22\"></Parent> */}\r\n\r\n    </div>\r\n  )\r\n}\r\n\r\n// function Parent(props){\r\n//   return (\r\n//     <div>\r\n//       <Child1 이름={props.이름}></Child1>\r\n//       <Child2 나이={props.나이}></Child2>\r\n//     </div>\r\n//   )\r\n// }\r\n\r\n// function Child1(props){\r\n//   useEffect(()=>{console.log('렌더링됨1')});\r\n//   return <div>1111</div>;\r\n// };\r\n// let Child2 = memo(function(){\r\n//   useEffect(()=>{console.log('렌더링됨2')});\r\n//   return <div>2222</div>;\r\n// });\r\n// function state를props화(state){ //redux store 데이터 가져와서 props로 변환해주는 함수\r\n//   return{\r\n//     state : state.reducer,\r\n//     alert열렸니 : state.reducer2\r\n//   }\r\n// }\r\n// export default connect(state를props화)(Cart)\r\n\r\nexport default Cart;"],"names":["React","ref","bsPrefix","className","striped","bordered","borderless","hover","size","variant","responsive","props","decoratedBsPrefix","useBootstrapPrefix","classes","classNames","table","_jsx","responsiveClass","children","state","useSelector","dispatch","useDispatch","reducer","map","e","i","id","name","quan","onClick","type","데이터","reducer2"],"sourceRoot":""}