{"version":3,"file":"static/js/442.0ac9df33.chunk.js","mappings":"oOAgHA,SAASA,EAAWC,GAMlB,OAJAC,EAAAA,EAAAA,YAAU,WACRD,EAAME,WAAU,MAGK,IAAnBF,EAAMG,UACD,2EACqB,IAAnBH,EAAMG,UACR,2EACqB,IAAnBH,EAAMG,UACR,gFADF,EAMT,SAASC,EAAKJ,GACZ,OACE,2CAASA,EAAMK,UAAU,MAW7B,SAASC,EAAMN,GACb,IAAIO,EAAaC,aAAaC,QAAQ,WAEtC,OADAF,EAAaG,KAAKC,MAAMJ,IAEtB,4BACE,eAAIK,UAAU,OAAd,8CACCL,EAAWM,KAAI,SAACC,EAAIC,GACnB,OACE,+BACE,gBAAKC,QAAQ,MAAMC,IAAG,mDAA8CjB,EAAMkB,MAAMJ,GAAIA,GAAK,EAAnE,QAA4EK,MAAM,UACxG,gCAAanB,EAAMkB,MAAMJ,GAAIM,UAFlBL,SASvB,WAAeM,EAAAA,EAAAA,KAxBf,SAAsBC,GACpB,MAAO,CACLA,MAAOA,EAAMC,QACbC,0BAAUF,EAAMG,YAqBpB,EArJA,SAAgBzB,GAEJ0B,EAAAA,GAAAA,IAAH,qCACKA,EAAAA,GAAAA,GAAH,iCAAuB,SAAA1B,GAAK,OAAIA,EAAM2B,gBAD/C,IAGA,GAAwBC,EAAAA,EAAAA,WAAS,GAAjC,eAAKC,EAAL,KAAYC,EAAZ,KACA,GAA8BF,EAAAA,EAAAA,UAAS,GAAvC,eAAKzB,EAAL,KAAe4B,EAAf,KACA,GAA2BH,EAAAA,EAAAA,WAAS,GAApC,eAAKI,EAAL,KAAc9B,EAAd,MACS+B,EAAAA,EAAAA,YAAWC,EAAAA,IAEpBjC,EAAAA,EAAAA,YAAU,WACR,IAAIkC,EAAMC,YAAW,WACnBN,GAAS,KACR,KACH,OAAO,WAAQO,aAAaF,MAC3B,CAACN,IAEJ,IAAMf,GAAOwB,EAAAA,EAAAA,MAAPxB,GACFyB,GAAUC,EAAAA,EAAAA,MAIVC,EAAczC,EAAMkB,MAAMwB,MAAK,SAAAC,GAAC,OAAIA,EAAE7B,IAAMA,KAehD,OAbAb,EAAAA,EAAAA,YAAU,WACR,IAAIM,EAAaC,aAAaC,QAAQ,YAEXF,EAAR,OAAfA,EAAoC,GACpBG,KAAKC,MAAMJ,IAEpBqC,KAAK9B,GAChBP,EAAa,IAAIsC,IAAItC,GACrBA,GAAU,OAAOA,GAEjBC,aAAasC,QAAQ,UAAWpC,KAAKqC,UAAUxC,MAC9C,KAGD,iBAAKK,UAAU,YAAf,WACE,0BACE,kBAAOA,UAAU,MAAjB,uBAGU,IAAViB,GACE,gBAAKjB,UAAU,eAAf,UACE,0GAEA,MAIN,iBAAKA,UAAU,MAAf,WACE,gBAAKA,UAAU,WAAf,UACE,gBAAKK,IAAG,mDAA8CwB,EAAY3B,GAAK,EAA/D,QAAwEK,MAAM,YAGxF,iBAAKP,UAAU,gBAAf,WACE,eAAIA,UAAU,OAAd,SAAsB6B,EAAYrB,SAClC,uBAAIqB,EAAYO,WAChB,uBAAIP,EAAYQ,SAEhB,SAAC7C,EAAD,CAAMC,UAAWL,EAAMK,aAEvB,mBAAQO,UAAU,iBAAiBsC,QAAS,WAE1ClD,EAAMmD,SAAS,CAAEC,KAAM,2BAAQC,qBAAK,CAAEvC,GAAI2B,EAAY3B,GAAIwC,KAAMb,EAAYrB,MAAOmC,KAAM,KACzFhB,EAAQK,KAAK,UAHf,uCAMA,mBAAQhC,UAAU,iBAAiBsC,QAAS,WAC1CX,EAAQK,KAAK,MADf,6CAQJ,gBAAKhC,UAAU,eAAf,SAEwC,OAApCJ,aAAaC,QAAQ,WACjB,MACA,SAACH,EAAD,CAAOY,MAAOlB,EAAMkB,WAK5B,UAAC,IAAD,CAAKN,UAAU,OAAOI,QAAQ,OAAOwC,iBAAiB,SAAtD,WACE,SAAC,SAAD,WACE,SAAC,SAAD,CAAUC,SAAS,SAASP,QAAS,WAAQhD,GAAU,GAAQ6B,EAAY,IAA3E,uBAEF,SAAC,SAAD,WACE,SAAC,SAAD,CAAU0B,SAAS,SAASP,QAAS,WAAQhD,GAAU,GAAQ6B,EAAY,IAA3E,4BAIJ,SAAC,IAAD,CAAe2B,GAAI1B,EAAS2B,WAAW,MAAMC,QAAS,IAAtD,UACE,SAAC7D,EAAD,CAAYI,SAAUA,EAAUD,UAAWA,a","sources":["Detail.js"],"sourcesContent":["import React, { useContext, useEffect, useState } from 'react';\r\nimport { useHistory, useParams } from 'react-router-dom'\r\nimport { Nav, Card } from 'react-bootstrap';\r\nimport styled from 'styled-components'\r\nimport './Detail.scss'\r\nimport { 재고context } from './App.js'\r\nimport { CSSTransition } from 'react-transition-group';\r\nimport { connect } from 'react-redux';\r\n\r\nfunction Detail(props) {\r\n  //styled-components\r\n  let box = styled.div`padding : 20px;`;\r\n  let title = styled.h4`color : ${props => props.색상}`;\r\n\r\n  let [alert, setAlert] = useState(true);\r\n  let [clickTab, setClickTab] = useState(0);\r\n  let [switchs, setSwitch] = useState(false)\r\n  let 재고 = useContext(재고context);\r\n\r\n  useEffect(() => {\r\n    let 타이머 = setTimeout(() => {\r\n      setAlert(false);\r\n    }, 2000);\r\n    return () => { clearTimeout(타이머) }\r\n  }, [alert]);\r\n\r\n  let { id } = useParams();\r\n  let history = useHistory(); //방문기록을 다 저장해놓는 object\r\n  // let findProduct = props.shoes.find(function(상품){\r\n  //   return 상품.id = id\r\n  // });\r\n  let findProduct = props.shoes.find(x => x.id == id)\r\n\r\n  useEffect(() => {\r\n    let localArray = localStorage.getItem('watched'); //[\"값\"]\r\n\r\n    if (localArray === null) { localArray = []; }\r\n    else { localArray = JSON.parse(localArray); } //json형태로 변경['값']\r\n\r\n    localArray.push(id); //['값','값']\r\n    localArray = new Set(localArray);//중복제거 Set(1) {'1'}\r\n    localArray = [...localArray];\r\n\r\n    localStorage.setItem('watched', JSON.stringify(localArray));\r\n  }, [])\r\n\r\n  return (\r\n    <div className=\"container\">\r\n      <box>\r\n        <title className=\"red\">Detail</title>\r\n      </box>\r\n      {\r\n        alert === true ?\r\n          <div className=\"my-alert-red\">\r\n            <p>재고가 얼마 남지 않았습니다.</p>\r\n          </div>\r\n          : null\r\n      }\r\n      {/* {재고} */}\r\n\r\n      <div className=\"row\">\r\n        <div className=\"col-md-6\">\r\n          <img src={`https://codingapple1.github.io/shop/shoes${findProduct.id + 1}.jpg`} width=\"100%\" />\r\n        </div>\r\n\r\n        <div className=\"col-md-6 mt-4\">\r\n          <h4 className=\"pt-5\">{findProduct.title}</h4>\r\n          <p>{findProduct.content}</p>\r\n          <p>{findProduct.price}</p>\r\n\r\n          <Info inventory={props.inventory}></Info>\r\n\r\n          <button className=\"btn btn-danger\" onClick={() => {\r\n            // props.setInventory([9,10,11])\r\n            props.dispatch({ type: '항목추가', 데이터: { id: findProduct.id, name: findProduct.title, quan: 1 } });\r\n            history.push('/cart');\r\n          }}>주문하기</button>\r\n\r\n          <button className=\"btn btn-danger\" onClick={() => {\r\n            history.push('/');\r\n          }}>뒤로가기</button>\r\n        </div>\r\n\r\n\r\n      </div>\r\n\r\n      <div className='watched-wrap'>\r\n        {\r\n          localStorage.getItem('watched') === null\r\n            ? null\r\n            : <Story shoes={props.shoes} />\r\n        }\r\n      </div>\r\n        \r\n\r\n      <Nav className=\"mt-5\" variant=\"tabs\" defaultActiveKey=\"link-0\">\r\n        <Nav.Item>\r\n          <Nav.Link eventKey=\"link-0\" onClick={() => { setSwitch(false); setClickTab(0) }}>Active</Nav.Link>\r\n        </Nav.Item>\r\n        <Nav.Item>\r\n          <Nav.Link eventKey=\"link-1\" onClick={() => { setSwitch(false); setClickTab(1) }}>Option 2</Nav.Link>\r\n        </Nav.Item>\r\n      </Nav>\r\n\r\n      <CSSTransition in={switchs} classNames=\"wow\" timeout={500}>\r\n        <TabContent clickTab={clickTab} setSwitch={setSwitch} />\r\n      </CSSTransition>\r\n\r\n    </div>\r\n  )\r\n}\r\n\r\nfunction TabContent(props) {\r\n\r\n  useEffect(() => {\r\n    props.setSwitch(true)\r\n  })\r\n\r\n  if (props.clickTab === 0) {\r\n    return <div>0번째 내용입니다.</div>\r\n  } else if (props.clickTab === 1) {\r\n    return <div>1번째 내용입니다.</div>\r\n  } else if (props.clickTab === 2) {\r\n    return <div>2번째 내용입니다.</div>\r\n  }\r\n}\r\n\r\n\r\nfunction Info(props) {\r\n  return (\r\n    <p>재고 : {props.inventory[0]}</p>\r\n  )\r\n}\r\n\r\nfunction state를props화(state) { //redux store 데이터 가져와서 props로 변환해주는 함수\r\n  return {\r\n    state: state.reducer,\r\n    alert열렸니: state.reducer2\r\n  }\r\n}\r\n\r\nfunction Story(props) {\r\n  let localArray = localStorage.getItem('watched');\r\n  localArray = JSON.parse(localArray);\r\n  return (\r\n    <div>\r\n      <h5 className=\"mt-5\">내가 본 상품</h5>\r\n      {localArray.map((id, index) => {\r\n        return (\r\n          <figure key={index}>\r\n            <img variant=\"top\" src={`https://codingapple1.github.io/shop/shoes${props.shoes[id].id + 1}.jpg`} width=\"100%\" />\r\n            <figcaption>{props.shoes[id].title}</figcaption>\r\n          </figure>\r\n        )\r\n      })}\r\n    </div>\r\n  )\r\n}\r\nexport default connect(state를props화)(Detail)"],"names":["TabContent","props","useEffect","setSwitch","clickTab","Info","inventory","Story","localArray","localStorage","getItem","JSON","parse","className","map","id","index","variant","src","shoes","width","title","connect","state","reducer","alert열렸니","reducer2","styled","색상","useState","alert","setAlert","setClickTab","switchs","useContext","재고context","타이머","setTimeout","clearTimeout","useParams","history","useHistory","findProduct","find","x","push","Set","setItem","stringify","content","price","onClick","dispatch","type","데이터","name","quan","defaultActiveKey","eventKey","in","classNames","timeout"],"sourceRoot":""}